{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\Projects\\\\monday-app\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport TicketCard from '../components/TicketCard';\nimport { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport CategoriesContext from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [tickets, setTickets] = useState(null);\n  const {\n    categories,\n    setCategories\n  } = useContext(CategoriesContext);\n  useEffect(async () => {\n    const response = await axios.get('http://localhost:8000/tickets'); //wasn't sure how to get the Documet Id with the object.. open to better suggestions\n\n    const dataObject = response.data.data;\n    const arrayOfKeys = Object.keys(dataObject);\n    const arrayOfData = Object.keys(dataObject).map(key => dataObject[key]);\n    const formattedArray = [];\n    arrayOfKeys.forEach((key, index) => {\n      const formmatedData = { ...arrayOfData[index]\n      };\n      formmatedData['documentId'] = key;\n      formattedArray.push(formmatedData);\n    });\n    setTickets(formattedArray);\n  }, []);\n  useEffect(() => {\n    setCategories([...new Set(tickets === null || tickets === void 0 ? void 0 : tickets.map(_ref => {\n      let {\n        category\n      } = _ref;\n      return category;\n    }))]);\n  }, [tickets]);\n  const colors = ['rgb(255,179,186)', 'rgb(255,223,186)', 'rgb(255,255,186)', 'rgb(186,255,201)', 'rgb(186,225,255)'];\n  const uniqueCategories = [...new Set(tickets === null || tickets === void 0 ? void 0 : tickets.map(_ref2 => {\n    let {\n      category\n    } = _ref2;\n    return category;\n  }))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-container\",\n      children: tickets && (uniqueCategories === null || uniqueCategories === void 0 ? void 0 : uniqueCategories.map((uniqueCategory, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: uniqueCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), tickets.filter(ticket => ticket.category === uniqueCategory).map((filteredTicket, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n          id: _index,\n          color: colors[categoryIndex] || colors[0],\n          ticket: filteredTicket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this))]\n      }, categoryIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"fwY6lVD51lloNLuFvyoBYJEe4Io=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["TicketCard","useState","useEffect","useContext","axios","CategoriesContext","Dashboard","tickets","setTickets","categories","setCategories","response","get","dataObject","data","arrayOfKeys","Object","keys","arrayOfData","map","key","formattedArray","forEach","index","formmatedData","push","Set","category","colors","uniqueCategories","uniqueCategory","categoryIndex","filter","ticket","filteredTicket","_index"],"sources":["C:/Users/Alex/Documents/Projects/monday-app/src/pages/Dashboard.js"],"sourcesContent":["import TicketCard from '../components/TicketCard'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport CategoriesContext from '../context'\r\n\r\nconst Dashboard = () => {\r\n  const [tickets, setTickets] = useState(null)\r\n  const { categories, setCategories } = useContext(CategoriesContext)\r\n\r\n  useEffect(async () => {\r\n    const response = await axios.get('http://localhost:8000/tickets')\r\n\r\n    //wasn't sure how to get the Documet Id with the object.. open to better suggestions\r\n    const dataObject = response.data.data\r\n\r\n    const arrayOfKeys = Object.keys(dataObject)\r\n    const arrayOfData = Object.keys(dataObject).map((key) => dataObject[key])\r\n    const formattedArray = []\r\n    arrayOfKeys.forEach((key, index) => {\r\n      const formmatedData = { ...arrayOfData[index] }\r\n      formmatedData['documentId'] = key\r\n      formattedArray.push(formmatedData)\r\n    })\r\n\r\n    setTickets(formattedArray)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCategories([...new Set(tickets?.map(({ category }) => category))])\r\n  }, [tickets])\r\n\r\n  const colors = [\r\n    'rgb(255,179,186)',\r\n    'rgb(255,223,186)',\r\n    'rgb(255,255,186)',\r\n    'rgb(186,255,201)',\r\n    'rgb(186,225,255)',\r\n  ]\r\n\r\n  const uniqueCategories = [\r\n    ...new Set(tickets?.map(({ category }) => category)),\r\n  ]\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>My Projects</h1>\r\n      <div className=\"ticket-container\">\r\n        {tickets &&\r\n          uniqueCategories?.map((uniqueCategory, categoryIndex) => (\r\n            <div key={categoryIndex}>\r\n              <h3>{uniqueCategory}</h3>\r\n              {tickets\r\n                .filter((ticket) => ticket.category === uniqueCategory)\r\n                .map((filteredTicket, _index) => (\r\n                  <TicketCard\r\n                    id={_index}\r\n                    color={colors[categoryIndex] || colors[0]}\r\n                    ticket={filteredTicket}\r\n                  />\r\n                ))}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}